package com.entity;
// Generated 2016-4-15 16:30:02 by Hibernate Tools 3.2.2.GA


import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;

/**
 * Interview generated by hbm2java
 */
@Entity
@Table(name="interview",catalog="dormitory")
@DynamicInsert(true)
@DynamicUpdate(true)
public class Interview  implements java.io.Serializable {

     private Long interviewId;
     private Date time;
     private String client;
     private String interviewee;
     private int intervieweeNo;
     private int buidingNo;
     private String reason;
     private byte isRead;
     private int roomNo;
     private String createdByUser;
     private String updatedByUser;

    public Interview() {
    }

    public Interview(Date time, String client, String interviewee, int intervieweeNo, int buidingNo, String reason, byte isRead, int roomNo, String createdByUser, String updatedByUser) {
       this.time = time;
       this.client = client;
       this.interviewee = interviewee;
       this.intervieweeNo = intervieweeNo;
       this.buidingNo = buidingNo;
       this.reason = reason;
       this.isRead = isRead;
       this.roomNo = roomNo;
       this.createdByUser = createdByUser;
       this.updatedByUser = updatedByUser;
    }
   
    @Id 
    
    @GeneratedValue(strategy=IDENTITY)
    @Column(name="interview_id", unique=true, nullable=false)
    public Long getInterviewId() {
        return this.interviewId;
    }
    
    public void setInterviewId(Long interviewId) {
        this.interviewId = interviewId;
    }
    
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="time", nullable=false, length=19)
    public Date getTime() {
        return this.time;
    }
    
    public void setTime(Date time) {
        this.time = time;
    }
    
    @Column(name="client", nullable=false, length=64)
    public String getClient() {
        return this.client;
    }
    
    public void setClient(String client) {
        this.client = client;
    }
    
    @Column(name="interviewee", nullable=false, length=64)
    public String getInterviewee() {
        return this.interviewee;
    }
    
    public void setInterviewee(String interviewee) {
        this.interviewee = interviewee;
    }
    
    @Column(name="Interviewee_no", nullable=false)
    public int getIntervieweeNo() {
        return this.intervieweeNo;
    }
    
    public void setIntervieweeNo(int intervieweeNo) {
        this.intervieweeNo = intervieweeNo;
    }
    
    @Column(name="buiding_no", nullable=false)
    public int getBuidingNo() {
        return this.buidingNo;
    }
    
    public void setBuidingNo(int buidingNo) {
        this.buidingNo = buidingNo;
    }
    
    @Column(name="reason", nullable=false)
    public String getReason() {
        return this.reason;
    }
    
    public void setReason(String reason) {
        this.reason = reason;
    }
    
    @Column(name="is_read", nullable=false)
    public byte getIsRead() {
        return this.isRead;
    }
    
    public void setIsRead(byte isRead) {
        this.isRead = isRead;
    }
    
    @Column(name="room_no", nullable=false)
    public int getRoomNo() {
        return this.roomNo;
    }
    
    public void setRoomNo(int roomNo) {
        this.roomNo = roomNo;
    }
    
    @Column(name="created_by_user", nullable=false, length=64)
    public String getCreatedByUser() {
        return this.createdByUser;
    }
    
    public void setCreatedByUser(String createdByUser) {
        this.createdByUser = createdByUser;
    }
    
    @Column(name="updated_by_user", nullable=false, length=64)
    public String getUpdatedByUser() {
        return this.updatedByUser;
    }
    
    public void setUpdatedByUser(String updatedByUser) {
        this.updatedByUser = updatedByUser;
    }




}


